name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch full history

      # Step 2: Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'

      # Step 3: Debug - Show current working directory and confirm go.mod is present
      - name: Debug - Show Current Working Directory and Files
        run: |
          echo "Checking working directory and file structure:"
          pwd
          ls -la
          find . -name "go.mod" || echo "go.mod not found!"
        working-directory: ./  # Set this to the root where go.mod should be

      # Step 4: Install dependencies using go.mod
      - name: Install dependencies
        run: go mod tidy
        working-directory: ./  # Adjust to root directory if go.mod is at the root

      # Step 5: Run tests
      - name: Run tests
        run: go test ./... -v
        working-directory: ./  # Ensure it's set to where go.mod is

      # Step 6: Lint the code
      - name: Lint the code
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run
        working-directory: ./  # Set to root directory if go.mod is at the root
